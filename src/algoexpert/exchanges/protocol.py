from typing import Any, Protocol, runtime_checkable

@runtime_checkable
class ExchangeAdapter(Protocol):
    def __init__(self, api_key: str, api_secret: str, base_url: str, instrument: str, contract: str, mode: str, market_type: str, contract_type: str):
        ...

    def connect(self):
        ...

    def balance(self):
        ...

    def on_init(self, *args, **kwargs):
        ...

    def on_deinit(self, *args, **kwargs):
        ...

    def on_tick(self, *args, **kwargs):
        ...

    def on_bar(self, bar: Any, timeframe: str):
        ...

    def on_timer(self, *args, **kwargs):
        ...

    def on_trade(self, *args, **kwargs):
        ...

    def on_transaction(self, *args, **kwargs):
        ...

    def on_book(self, *args, **kwargs):
        ...

    async def run(self):
        ...
